# -*- coding: utf-8 -*-
"""Astronomical_Tabular_Data_Visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qUjS5XQJGZgXZCCRaOVfAXvtSr1mRkU0
"""

# Importing the libraries
import os
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Peek into the data by creating  pandas dataframe
star_df = pd.read_csv('https://drive.google.com/uc?id=1BQVc6MHjQFtDC9iP1isT_K4ojVe_Oil-')
star_df.sample(10)

# Check generic information of the data frame
star_df.info()

""" ## Create a directory to save different visualizations"""

# Create a directory to save the visualizations
folder_name = 'star_plots'
os.makedirs(folder_name, exist_ok=True)
base_dir = f'/content/{folder_name}/'

"""## Visualize count of star for each type of star

### Matplotlib
"""

# Bar chart to visulize the count of stars with respective type
star_df['Star type'].value_counts().plot(kind='bar')
plt.show()

"""## Customize the above plot and save it"""

# Customize the plot
plt.figure(figsize=(4.3,4.3))
plt.style.use('default')
ax = star_df['Star type'].value_counts().plot(kind='bar', color=['brown', 'red', 'blue', 'yellow', 'lightblue', 'orange'])
ax.bar_label(ax.containers[0], color='red')
plt.title('Visualize Star count per start type', color='royalblue', weight='bold')
plt.yticks(color= 'tab:pink')
plt.ylabel('# of Stars', color='pink', fontsize=11)
plt.xticks(ticks=[0, 1, 2, 3, 4, 5], labels=['Brown\nDwarf', 'Red\nDwarf', 'White\nDwarf', 'Main\nSequence', 'Supergiants', 'Hypergiants'], color='lime')
plt.savefig(base_dir+'barplot_star_count.png')
plt.show()

"""## Use seaborn barplot to compare it with the above bar chart

### (Matplotlib + Seaborn)
"""

# Visualizing the color data

sns.barplot(x=star_df['Star color'].value_counts().index,
            y=star_df['Star color'].value_counts(),
            palette='viridis')
ax.bar_label(ax.containers[0], color='red', weight='bold')
plt.title('Visualizing the Count of Star Colors', color='purple', fontweight='bold')
plt.xticks(color='orange')
plt.ylabel('Star color', color='orange', fontsize=13)
plt.savefig(base_dir+'star_colors_viz.png')
plt.show()

"""## Box Plot"""

# Getting a gist of the data again
star_df.head(5)

# Visualize Outliers in ther Data
plt.figure(figsize=(20, 8))
plt.style.use('default')
plt.suptitle('Visualizing the outliers in numeric features of Star Type', color='black', weight='bold', fontsize=15)
for i in range(4):
  plt.subplot(1, 4 , i+1)
  sns.boxplot(x=star_df['Star type'], y=star_df.iloc[:, i])
  plt.title(star_df.columns[i], color='red')
  plt.ylabel('')

plt.savefig(base_dir+'boxplot_star_type.png')

"""## Creating Line plots"""

def line_subplot(star_df, colors, i):
  plt.subplot(4, 1, i+1)
  plt.plot(star_df.iloc[:,i], color=colors[i])
  plt.title(star_df.columns[i], color='red')

# Line Plots
colors = ['royalblue', 'green', 'gold', 'magenta']
plt.figure(figsize=(15,8))
plt.suptitle('Visualizing the distribution of Numeric Features\n', color='black', weight='bold', fontsize=18)

for i in range(4):
  line_subplot(star_df, colors, i)

plt.tight_layout()
plt.savefig(base_dir+'line_subplot.png')
plt.show()

"""## Creating a Pair Plot"""

sns.pairplot(star_df, hue='Spectral Class')
plt.savefig(base_dir+'pairplot.png')
plt.show()

